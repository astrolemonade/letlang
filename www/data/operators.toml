table = [
  { prec = 1, op = "a<>", desc = "Generic specialization", assoc = "left-to-right" },
  { prec = 1, op = "a()", desc = "Function call", assoc = "left-to-right" },
  { prec = 1, op = ".", desc = "Member access", assoc = "left-to-right" },
  { prec = 2, op = "~a", desc = "Bitwise NOT", assoc = "right-to-left" },
  { prec = 2, op = "not a", desc = "Logical NOT", assoc = "right-to-left" },
  { prec = 2, op = "-a", desc = "Unary minus", assoc = "right-to-left" },
  { prec = 3, op = "a**b", desc = "Exponent", assoc = "left-to-right" },
  { prec = 4, op = "a*b", desc = "Multiplication", assoc = "left-to-right" },
  { prec = 4, op = "a/b", desc = "Division", assoc = "left-to-right" },
  { prec = 4, op = "a%b", desc = "Modulo", assoc = "left-to-right" },
  { prec = 5, op = "a+b", desc = "Addition", assoc = "left-to-right" },
  { prec = 5, op = "a-b", desc = "Substraction", assoc = "left-to-right" },
  { prec = 6, op = "a<>b", desc = "String concatenation", assoc = "left-to-right" },
  { prec = 7, op = "a<<b", desc = "Bitwise left shift", assoc = "left-to-right" },
  { prec = 7, op = "a>>b", desc = "Bitwise right shift", assoc = "left-to-right" },
  { prec = 8, op = "a<b", desc = "Less than comparison", assoc = "left-to-right" },
  { prec = 8, op = "a<=b", desc = "Less than or equal comparison", assoc = "left-to-right" },
  { prec = 8, op = "a>=b", desc = "Greater than or equal comparison", assoc = "left-to-right" },
  { prec = 8, op = "a>b", desc = "Greater than comparison", assoc = "left-to-right" },
  { prec = 9, op = "a=b", desc = "Equality comparison", assoc = "left-to-right" },
  { prec = 9, op = "a!=b", desc = "Inequality comparison", assoc = "left-to-right" },
  { prec = 10, op = "a in b", desc = "Inclusion comparison", assoc = "left-to-right" },
  { prec = 10, op = "a not in b", desc = "Exclusion comparison", assoc = "left-to-right" },
  { prec = 11, op = "a&b", desc = "Bitwise AND", assoc = "left-to-right" },
  { prec = 12, op = "a^b", desc = "Bitwise XOR", assoc = "left-to-right" },
  { prec = 13, op = "a|b", desc = "Bitwise OR", assoc = "left-to-right" },
  { prec = 14, op = "a and b", desc = "Logical AND", assoc = "left-to-right" },
  { prec = 15, op = "a or b", desc = "Logical OR", assoc = "left-to-right" },
  { prec = 16, op = "throw a", desc = "Exception throwing", assoc = "right-to-left" },
  { prec = 17, op = "|>", desc = "Pipeline", assoc = "left-to-right" },
  { prec = 18, op = "is", desc = "Type membership inclusion", assoc = "left-to-right" },
  { prec = 18, op = "is not", desc = "Type membership exclusion", assoc = "left-to-right" },
  { prec = 19, op = ":=", desc = "Pattern matching", assoc = "left-to-right" },
]
